//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.0
//     from Assets/playerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

/// <summary>
/// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/playerControls.inputactions".
/// </summary>
/// <remarks>
/// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
/// </remarks>
/// <example>
/// <code>
/// using namespace UnityEngine;
/// using UnityEngine.InputSystem;
///
/// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
/// public class Example : MonoBehaviour, MyActions.IPlayerActions
/// {
///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
///
///     void Awake()
///     {
///         m_Actions = new MyActions_Actions();              // Create asset object.
///         m_Player = m_Actions.Player;                      // Extract action map object.
///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
///     }
///
///     void OnDestroy()
///     {
///         m_Actions.Dispose();                              // Destroy asset object.
///     }
///
///     void OnEnable()
///     {
///         m_Player.Enable();                                // Enable all actions within map.
///     }
///
///     void OnDisable()
///     {
///         m_Player.Disable();                               // Disable all actions within map.
///     }
///
///     #region Interface implementation of MyActions.IPlayerActions
///
///     // Invoked when "Move" action is either started, performed or canceled.
///     public void OnMove(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
///     }
///
///     // Invoked when "Attack" action is either started, performed or canceled.
///     public void OnAttack(InputAction.CallbackContext context)
///     {
///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
///     }
///
///     #endregion
/// }
/// </code>
/// </example>
public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    /// <summary>
    /// Provides access to the underlying asset instance.
    /// </summary>
    public InputActionAsset asset { get; }

    /// <summary>
    /// Constructs a new instance.
    /// </summary>
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""playerControls"",
    ""maps"": [
        {
            ""name"": ""GamePlay"",
            ""id"": ""a803edbb-e399-4730-a671-abb8b78f1413"",
            ""actions"": [
                {
                    ""name"": ""SpawnSwordsMan"",
                    ""type"": ""Button"",
                    ""id"": ""c7484cdc-f77b-4f49-8b67-1d65049ae7e0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnMagi"",
                    ""type"": ""Button"",
                    ""id"": ""67481d92-f632-41c9-b738-4200d0417aa0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnMacer"",
                    ""type"": ""Button"",
                    ""id"": ""fb15fedc-7e11-4c13-99ea-46b909e57dec"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnSpearer"",
                    ""type"": ""Button"",
                    ""id"": ""496e29fc-2958-4ae5-bcd6-8b40dd46f8a8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnSummoner"",
                    ""type"": ""Button"",
                    ""id"": ""dc45dc16-a148-4256-af36-60e0d40b424c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnShielder"",
                    ""type"": ""Button"",
                    ""id"": ""f318e0df-aa74-46bb-89eb-f08e16c7ec87"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnHealer"",
                    ""type"": ""Button"",
                    ""id"": ""5dd27ad5-998c-4673-b3f9-a5a3b3cf39b0"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnArcher"",
                    ""type"": ""Button"",
                    ""id"": ""4e64cbff-e39f-47e2-a53e-c52373a3beb6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpawnMushroomer"",
                    ""type"": ""Button"",
                    ""id"": ""d76fba25-9e19-4dd0-91d7-77ed8c522981"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""12e7a91a-6fd7-4fa3-b2aa-b58c817368cc"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnSwordsMan"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c4067e0-7fcb-44b6-bcfb-357823a2f2b4"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnMagi"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a8fca34-af93-4796-8773-c17f1d9d4fec"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnMacer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""772147fc-d09c-4dd3-ac93-09803ccaf2c6"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnSpearer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""455a4e9e-7c1f-4568-bfd5-7d6027f9f63c"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnSummoner"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac62c76b-dcaa-40bc-870b-2dcfc42cb157"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnShielder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f37ea110-7354-46c7-b7c8-0cfbece785b2"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnHealer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d8451c8-b51a-4709-9799-278fa28f7c4e"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnArcher"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6b74311-e46e-4b72-980f-1f9aedae7a2c"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpawnMushroomer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GamePlay
        m_GamePlay = asset.FindActionMap("GamePlay", throwIfNotFound: true);
        m_GamePlay_SpawnSwordsMan = m_GamePlay.FindAction("SpawnSwordsMan", throwIfNotFound: true);
        m_GamePlay_SpawnMagi = m_GamePlay.FindAction("SpawnMagi", throwIfNotFound: true);
        m_GamePlay_SpawnMacer = m_GamePlay.FindAction("SpawnMacer", throwIfNotFound: true);
        m_GamePlay_SpawnSpearer = m_GamePlay.FindAction("SpawnSpearer", throwIfNotFound: true);
        m_GamePlay_SpawnSummoner = m_GamePlay.FindAction("SpawnSummoner", throwIfNotFound: true);
        m_GamePlay_SpawnShielder = m_GamePlay.FindAction("SpawnShielder", throwIfNotFound: true);
        m_GamePlay_SpawnHealer = m_GamePlay.FindAction("SpawnHealer", throwIfNotFound: true);
        m_GamePlay_SpawnArcher = m_GamePlay.FindAction("SpawnArcher", throwIfNotFound: true);
        m_GamePlay_SpawnMushroomer = m_GamePlay.FindAction("SpawnMushroomer", throwIfNotFound: true);
    }

    ~@PlayerControls()
    {
        UnityEngine.Debug.Assert(!m_GamePlay.enabled, "This will cause a leak and performance issues, PlayerControls.GamePlay.Disable() has not been called.");
    }

    /// <summary>
    /// Destroys this asset and all associated <see cref="InputAction"/> instances.
    /// </summary>
    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
    public void Enable()
    {
        asset.Enable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
    public void Disable()
    {
        asset.Disable();
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
    public IEnumerable<InputBinding> bindings => asset.bindings;

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GamePlay
    private readonly InputActionMap m_GamePlay;
    private List<IGamePlayActions> m_GamePlayActionsCallbackInterfaces = new List<IGamePlayActions>();
    private readonly InputAction m_GamePlay_SpawnSwordsMan;
    private readonly InputAction m_GamePlay_SpawnMagi;
    private readonly InputAction m_GamePlay_SpawnMacer;
    private readonly InputAction m_GamePlay_SpawnSpearer;
    private readonly InputAction m_GamePlay_SpawnSummoner;
    private readonly InputAction m_GamePlay_SpawnShielder;
    private readonly InputAction m_GamePlay_SpawnHealer;
    private readonly InputAction m_GamePlay_SpawnArcher;
    private readonly InputAction m_GamePlay_SpawnMushroomer;
    /// <summary>
    /// Provides access to input actions defined in input action map "GamePlay".
    /// </summary>
    public struct GamePlayActions
    {
        private @PlayerControls m_Wrapper;

        /// <summary>
        /// Construct a new instance of the input action map wrapper class.
        /// </summary>
        public GamePlayActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        /// <summary>
        /// Provides access to the underlying input action "GamePlay/SpawnSwordsMan".
        /// </summary>
        public InputAction @SpawnSwordsMan => m_Wrapper.m_GamePlay_SpawnSwordsMan;
        /// <summary>
        /// Provides access to the underlying input action "GamePlay/SpawnMagi".
        /// </summary>
        public InputAction @SpawnMagi => m_Wrapper.m_GamePlay_SpawnMagi;
        /// <summary>
        /// Provides access to the underlying input action "GamePlay/SpawnMacer".
        /// </summary>
        public InputAction @SpawnMacer => m_Wrapper.m_GamePlay_SpawnMacer;
        /// <summary>
        /// Provides access to the underlying input action "GamePlay/SpawnSpearer".
        /// </summary>
        public InputAction @SpawnSpearer => m_Wrapper.m_GamePlay_SpawnSpearer;
        /// <summary>
        /// Provides access to the underlying input action "GamePlay/SpawnSummoner".
        /// </summary>
        public InputAction @SpawnSummoner => m_Wrapper.m_GamePlay_SpawnSummoner;
        /// <summary>
        /// Provides access to the underlying input action "GamePlay/SpawnShielder".
        /// </summary>
        public InputAction @SpawnShielder => m_Wrapper.m_GamePlay_SpawnShielder;
        /// <summary>
        /// Provides access to the underlying input action "GamePlay/SpawnHealer".
        /// </summary>
        public InputAction @SpawnHealer => m_Wrapper.m_GamePlay_SpawnHealer;
        /// <summary>
        /// Provides access to the underlying input action "GamePlay/SpawnArcher".
        /// </summary>
        public InputAction @SpawnArcher => m_Wrapper.m_GamePlay_SpawnArcher;
        /// <summary>
        /// Provides access to the underlying input action "GamePlay/SpawnMushroomer".
        /// </summary>
        public InputAction @SpawnMushroomer => m_Wrapper.m_GamePlay_SpawnMushroomer;
        /// <summary>
        /// Provides access to the underlying input action map instance.
        /// </summary>
        public InputActionMap Get() { return m_Wrapper.m_GamePlay; }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
        public void Enable() { Get().Enable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
        public void Disable() { Get().Disable(); }
        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
        public bool enabled => Get().enabled;
        /// <summary>
        /// Implicitly converts an <see ref="GamePlayActions" /> to an <see ref="InputActionMap" /> instance.
        /// </summary>
        public static implicit operator InputActionMap(GamePlayActions set) { return set.Get(); }
        /// <summary>
        /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <param name="instance">Callback instance.</param>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
        /// </remarks>
        /// <seealso cref="GamePlayActions" />
        public void AddCallbacks(IGamePlayActions instance)
        {
            if (instance == null || m_Wrapper.m_GamePlayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GamePlayActionsCallbackInterfaces.Add(instance);
            @SpawnSwordsMan.started += instance.OnSpawnSwordsMan;
            @SpawnSwordsMan.performed += instance.OnSpawnSwordsMan;
            @SpawnSwordsMan.canceled += instance.OnSpawnSwordsMan;
            @SpawnMagi.started += instance.OnSpawnMagi;
            @SpawnMagi.performed += instance.OnSpawnMagi;
            @SpawnMagi.canceled += instance.OnSpawnMagi;
            @SpawnMacer.started += instance.OnSpawnMacer;
            @SpawnMacer.performed += instance.OnSpawnMacer;
            @SpawnMacer.canceled += instance.OnSpawnMacer;
            @SpawnSpearer.started += instance.OnSpawnSpearer;
            @SpawnSpearer.performed += instance.OnSpawnSpearer;
            @SpawnSpearer.canceled += instance.OnSpawnSpearer;
            @SpawnSummoner.started += instance.OnSpawnSummoner;
            @SpawnSummoner.performed += instance.OnSpawnSummoner;
            @SpawnSummoner.canceled += instance.OnSpawnSummoner;
            @SpawnShielder.started += instance.OnSpawnShielder;
            @SpawnShielder.performed += instance.OnSpawnShielder;
            @SpawnShielder.canceled += instance.OnSpawnShielder;
            @SpawnHealer.started += instance.OnSpawnHealer;
            @SpawnHealer.performed += instance.OnSpawnHealer;
            @SpawnHealer.canceled += instance.OnSpawnHealer;
            @SpawnArcher.started += instance.OnSpawnArcher;
            @SpawnArcher.performed += instance.OnSpawnArcher;
            @SpawnArcher.canceled += instance.OnSpawnArcher;
            @SpawnMushroomer.started += instance.OnSpawnMushroomer;
            @SpawnMushroomer.performed += instance.OnSpawnMushroomer;
            @SpawnMushroomer.canceled += instance.OnSpawnMushroomer;
        }

        /// <summary>
        /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
        /// </summary>
        /// <remarks>
        /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
        /// </remarks>
        /// <seealso cref="GamePlayActions" />
        private void UnregisterCallbacks(IGamePlayActions instance)
        {
            @SpawnSwordsMan.started -= instance.OnSpawnSwordsMan;
            @SpawnSwordsMan.performed -= instance.OnSpawnSwordsMan;
            @SpawnSwordsMan.canceled -= instance.OnSpawnSwordsMan;
            @SpawnMagi.started -= instance.OnSpawnMagi;
            @SpawnMagi.performed -= instance.OnSpawnMagi;
            @SpawnMagi.canceled -= instance.OnSpawnMagi;
            @SpawnMacer.started -= instance.OnSpawnMacer;
            @SpawnMacer.performed -= instance.OnSpawnMacer;
            @SpawnMacer.canceled -= instance.OnSpawnMacer;
            @SpawnSpearer.started -= instance.OnSpawnSpearer;
            @SpawnSpearer.performed -= instance.OnSpawnSpearer;
            @SpawnSpearer.canceled -= instance.OnSpawnSpearer;
            @SpawnSummoner.started -= instance.OnSpawnSummoner;
            @SpawnSummoner.performed -= instance.OnSpawnSummoner;
            @SpawnSummoner.canceled -= instance.OnSpawnSummoner;
            @SpawnShielder.started -= instance.OnSpawnShielder;
            @SpawnShielder.performed -= instance.OnSpawnShielder;
            @SpawnShielder.canceled -= instance.OnSpawnShielder;
            @SpawnHealer.started -= instance.OnSpawnHealer;
            @SpawnHealer.performed -= instance.OnSpawnHealer;
            @SpawnHealer.canceled -= instance.OnSpawnHealer;
            @SpawnArcher.started -= instance.OnSpawnArcher;
            @SpawnArcher.performed -= instance.OnSpawnArcher;
            @SpawnArcher.canceled -= instance.OnSpawnArcher;
            @SpawnMushroomer.started -= instance.OnSpawnMushroomer;
            @SpawnMushroomer.performed -= instance.OnSpawnMushroomer;
            @SpawnMushroomer.canceled -= instance.OnSpawnMushroomer;
        }

        /// <summary>
        /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="GamePlayActions.UnregisterCallbacks(IGamePlayActions)" />.
        /// </summary>
        /// <seealso cref="GamePlayActions.UnregisterCallbacks(IGamePlayActions)" />
        public void RemoveCallbacks(IGamePlayActions instance)
        {
            if (m_Wrapper.m_GamePlayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        /// <summary>
        /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
        /// </summary>
        /// <remarks>
        /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
        /// </remarks>
        /// <seealso cref="GamePlayActions.AddCallbacks(IGamePlayActions)" />
        /// <seealso cref="GamePlayActions.RemoveCallbacks(IGamePlayActions)" />
        /// <seealso cref="GamePlayActions.UnregisterCallbacks(IGamePlayActions)" />
        public void SetCallbacks(IGamePlayActions instance)
        {
            foreach (var item in m_Wrapper.m_GamePlayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GamePlayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    /// <summary>
    /// Provides a new <see cref="GamePlayActions" /> instance referencing this action map.
    /// </summary>
    public GamePlayActions @GamePlay => new GamePlayActions(this);
    /// <summary>
    /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "GamePlay" which allows adding and removing callbacks.
    /// </summary>
    /// <seealso cref="GamePlayActions.AddCallbacks(IGamePlayActions)" />
    /// <seealso cref="GamePlayActions.RemoveCallbacks(IGamePlayActions)" />
    public interface IGamePlayActions
    {
        /// <summary>
        /// Method invoked when associated input action "SpawnSwordsMan" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpawnSwordsMan(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SpawnMagi" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpawnMagi(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SpawnMacer" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpawnMacer(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SpawnSpearer" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpawnSpearer(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SpawnSummoner" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpawnSummoner(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SpawnShielder" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpawnShielder(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SpawnHealer" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpawnHealer(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SpawnArcher" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpawnArcher(InputAction.CallbackContext context);
        /// <summary>
        /// Method invoked when associated input action "SpawnMushroomer" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
        /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
        void OnSpawnMushroomer(InputAction.CallbackContext context);
    }
}
